"0","library(ggplot2)"
"0","library(ggdensity)"
"0","library(ggridges)"
"0","library(plotly)"
"0","library(tidyr)"
"0","library(htmltools)"
"0","library(ggbump)"
"0",""
"0","race_results = read.csv(""data/Race_Results.csv"")"
"0","drivers = read.csv(""data/Driver_Details.csv"")"
"0","race_info = read.csv(""data/Race_Schedule.csv"")"
"0","world_champs = read.csv(""data/world_champs.csv"")"
"0","track_info = read.csv(""data/Track_Information.csv"")"
"0","lap_times = read.csv(""data/Lap_Timings.csv"")"
"0","schedule = read.csv(""data/Race_Schedule.csv"")"
"0",""
"0","merged_race_results = merge(x = race_results, y = drivers, by = ""driverId"")"
"0","merged_race_results$fullname = paste(merged$forename, merged$surname)"
"0",""
"0","lap_times_full = merge(lap_times, drivers, by=""driverId"")"
"0","lap_times_full = merge(lap_times_full, schedule, by=""raceId"")"
"0","lap_times_full = merge(lap_times_full, track_info, by=""circuitId"")"
"0",""
"0","world_champs_races = merged[(merged$surname %in% world_champs$Last) & (merged$forename %in% world_champs$First), ]"
"0","world_champs_races = merge(world_champs_races, race_info, by=""raceId"")"
"0","world_champs_races$win = ifelse(world_champs_races$positionOrder == 1, 1, 0)"
"0","world_champs_races$win = as.numeric(world_champs_races$win)"
"0","world_champs_wins = aggregate(world_champs_races[,""win""], world_champs_races[,c(""fullname"", ""surname"", ""driverId"")], ""sum"")"
"0",""
"0","num_races = function(row) {"
"0","  driver <- row[1]                    # first element is the surname"
"0","  sum(!duplicated("
"0","        world_champs_races$raceId[world_champs_races$fullname == driver]))"
"0","}"
"0",""
"0","world_champs_wins$num.races = apply(world_champs_wins, 1, num_races)"
"0","world_champs_wins$win.prop = world_champs_wins$x / world_champs_wins$num.races"
"0",""
"0",""
"0","big_data = merge(merged, race_info, by=""raceId"")"
"0","big_data = merge(big_data, driver_standings, by=c(""driverId"", ""raceId""))"
"0","big_data$rank = replace_na(as.numeric(big_data$rank), 20)"
"2","Warning: NAs introduced by coercion"
"0","big_data$win = ifelse(big_data$positionOrder == 1, 1, 0)"
"0","avg_big_data_driver = aggregate(big_data[,c(""grid"", ""positionOrder"", ""win"")], big_data[c(""fullname"", ""driverId"", ""surname"", ""forename"")], ""mean"")"
"0",""
"0","driver_status = function(row) {"
"0","  driver = row[""fullname""]"
"0","  if(driver %in% c(""Max Verstappen"", ""Lewis Hamilton"", ""Sebastian Vettel"", ""Michael Schumacher"", ""Ayrton Senna"", ""Juan Fangio"", ""Alain Prost"")) {"
"0","    return(""Legend"")"
"0","  } else if(driver %in% unique(world_champs_races$fullname)) {"
"0","    return(""Champion"")"
"0","  } else {"
"0","    return(""Driver"")"
"0","  }"
"0","}"
"0","world_champs_wins$status = apply(world_champs_wins, 1, driver_status)"
"0","avg_big_data_driver$status = apply(avg_big_data_driver, 1, driver_status)"
"0","merged_race_results$status = apply(merged_race_results, 1, driver_status)"
"0",""
"0","all_time_greats = merged[(merged$fullname %in% c(""Max Verstappen"", ""Lewis Hamilton"", ""Sebastian Vettel"", ""Michael Schumacher"", ""Ayrton Senna"", ""Juan Fangio"", ""Alain Prost"")), ]"
"0","all_time_greats = merge(all_time_greats, race_info, by=""raceId"")"
"0","all_time_greats$win = ifelse(all_time_greats$positionOrder == 1, 1, 0)"
"0",""
"0","driver_standings = read.csv(""data/Driver_Rankings.csv"")"
"0","# champions per season"
"0","champions_per_year <- merge("
"0","  merge(driver_standings, race_info[, c(""raceId"", ""year"")]),"
"0","  drivers[, c(""driverId"", ""surname"", ""forename"")]"
"0",")"
"0",""
"0","champions_per_year$fullname = paste(champions_per_year$forename, champions_per_year$surname)"
"0","champions_per_year = champions_per_year["
"0","  champions_per_year$position == 1, ]"
"0",""
"0","# take only the final race of the season"
"0","champions_per_year <- champions_per_year[ave("
"0","  champions_per_year$raceId,"
"0","  champions_per_year$year,"
"0","  FUN = max) == champions_per_year$raceId,"
"0","  c(""year"", ""fullname"")"
"0","]"
"0",""
"0","# now filter & aggregate"
"0","tmp <- merge(world_champs_races, champions_per_year,"
"0","             by = c(""year"", ""fullname""))"
"0",""
"0","wins_df  <- aggregate(positionOrder ~ year + fullname, tmp,"
"0","                      function(x) sum(x == 1))"
"0","races_df <- aggregate(raceId        ~ year + fullname, tmp,"
"0","                      function(x) length(unique(x)))"
"0","names(wins_df)[3]  <- ""wins"""
"0","names(races_df)[3] <- ""races"""
"0",""
"0","champ_wins_year <- merge(wins_df, races_df, by = c(""year"", ""fullname""))"
"0","champ_wins_year$win_rate <- with(champ_wins_year, wins / races)"
"0","champ_wins_year <- champ_wins_year[order(champ_wins_year$year), ]"
"0",""
"0","champ_wins_year$status = apply(champ_wins_year, 1, driver_status)"
